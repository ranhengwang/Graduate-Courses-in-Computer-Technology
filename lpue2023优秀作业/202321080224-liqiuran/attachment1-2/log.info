==29088== Memcheck, a memory error detector
==29088== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==29088== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==29088== Command: ./write_file_demo
==29088== Parent PID: 22011
==29088== 
==29088== Thread 2:
==29088== Syscall param write(buf) points to uninitialised byte(s)
==29088==    at 0x4BCAAAF: __libc_write (write.c:26)
==29088==    by 0x4BCAAAF: write (write.c:24)
==29088==    by 0x113339: StreamInfo::append_data(char*, unsigned long) (stream_info.cpp:123)
==29088==    by 0x111D6E: listen_thread_func(void*) (stream_reciever.cpp:70)
==29088==    by 0x11422F: thread_func(void*) (thread_manager.cpp:207)
==29088==    by 0x4B4AAC2: start_thread (pthread_create.c:442)
==29088==    by 0x4BDBBF3: clone (clone.S:100)
==29088==  Address 0x4dddafc is 44 bytes inside a block of size 80 alloc'd
==29088==    at 0x4848F95: operator new(unsigned long) (vg_replace_malloc.c:472)
==29088==    by 0x112838: init_stream_relative() (stream_reciever.cpp:159)
==29088==    by 0x11708F: main (write_file.cpp:43)
==29088== 
==29088== 
==29088== HEAP SUMMARY:
==29088==     in use at exit: 160 bytes in 2 blocks
==29088==   total heap usage: 153 allocs, 151 frees, 2,550,222,440 bytes allocated
==29088== 
==29088== LEAK SUMMARY:
==29088==    definitely lost: 0 bytes in 0 blocks
==29088==    indirectly lost: 0 bytes in 0 blocks
==29088==      possibly lost: 0 bytes in 0 blocks
==29088==    still reachable: 160 bytes in 2 blocks
==29088==         suppressed: 0 bytes in 0 blocks
==29088== Reachable blocks (those to which a pointer was found) are not shown.
==29088== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==29088== 
==29088== Use --track-origins=yes to see where uninitialised values come from
==29088== For lists of detected and suppressed errors, rerun with: -s
==29088== ERROR SUMMARY: 38 errors from 1 contexts (suppressed: 0 from 0)
